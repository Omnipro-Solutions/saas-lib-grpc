# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from omni_pro_grpc.v1.utilities import mirror_model_pb2 as v1_dot_utilities_dot_mirror__model__pb2


class MirrorModelServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateMirrorModel = channel.unary_unary(
            "/pro.omni.oms.api.v1.utilities.mirror_model.MirrorModelService/CreateMirrorModel",
            request_serializer=v1_dot_utilities_dot_mirror__model__pb2.CreateOrUpdateMirrorModelRequest.SerializeToString,
            response_deserializer=v1_dot_utilities_dot_mirror__model__pb2.CreateOrUpdateCreateMirrorResponse.FromString,
        )
        self.ReadMirrorModel = channel.unary_unary(
            "/pro.omni.oms.api.v1.utilities.mirror_model.MirrorModelService/ReadMirrorModel",
            request_serializer=v1_dot_utilities_dot_mirror__model__pb2.ReadMirrorModelRequest.SerializeToString,
            response_deserializer=v1_dot_utilities_dot_mirror__model__pb2.ReadMirrorModelResponse.FromString,
        )
        self.UpdateMirrorModel = channel.unary_unary(
            "/pro.omni.oms.api.v1.utilities.mirror_model.MirrorModelService/UpdateMirrorModel",
            request_serializer=v1_dot_utilities_dot_mirror__model__pb2.CreateOrUpdateMirrorModelRequest.SerializeToString,
            response_deserializer=v1_dot_utilities_dot_mirror__model__pb2.CreateOrUpdateCreateMirrorResponse.FromString,
        )
        self.DeleteMirrorModel = channel.unary_unary(
            "/pro.omni.oms.api.v1.utilities.mirror_model.MirrorModelService/DeleteMirrorModel",
            request_serializer=v1_dot_utilities_dot_mirror__model__pb2.DeleteMirrorModelRequest.SerializeToString,
            response_deserializer=v1_dot_utilities_dot_mirror__model__pb2.DeleteMirrorModelResponse.FromString,
        )
        self.MultiCreateMirrorModel = channel.unary_unary(
            "/pro.omni.oms.api.v1.utilities.mirror_model.MirrorModelService/MultiCreateMirrorModel",
            request_serializer=v1_dot_utilities_dot_mirror__model__pb2.MultiCreateOrMultiUpdateMirrorModelRequest.SerializeToString,
            response_deserializer=v1_dot_utilities_dot_mirror__model__pb2.MultiCreateOrMultiUpdateMirrorModelResponse.FromString,
        )
        self.MultiUpdateMirrorModel = channel.unary_unary(
            "/pro.omni.oms.api.v1.utilities.mirror_model.MirrorModelService/MultiUpdateMirrorModel",
            request_serializer=v1_dot_utilities_dot_mirror__model__pb2.MultiCreateOrMultiUpdateMirrorModelRequest.SerializeToString,
            response_deserializer=v1_dot_utilities_dot_mirror__model__pb2.MultiCreateOrMultiUpdateMirrorModelResponse.FromString,
        )
        self.MultiDeleteMirrorModel = channel.unary_unary(
            "/pro.omni.oms.api.v1.utilities.mirror_model.MirrorModelService/MultiDeleteMirrorModel",
            request_serializer=v1_dot_utilities_dot_mirror__model__pb2.MultiDeleteMirrorModelRequest.SerializeToString,
            response_deserializer=v1_dot_utilities_dot_mirror__model__pb2.MultiDeleteMirrorModelResponse.FromString,
        )
        self.RegisterMethodGrpc = channel.unary_unary(
            "/pro.omni.oms.api.v1.utilities.mirror_model.MirrorModelService/RegisterMethodGrpc",
            request_serializer=v1_dot_utilities_dot_mirror__model__pb2.RegisterMethodGrpcRequest.SerializeToString,
            response_deserializer=v1_dot_utilities_dot_mirror__model__pb2.RegisterMethodGrpcResponse.FromString,
        )
        self.RegisterWebhookMirrorModel = channel.unary_unary(
            "/pro.omni.oms.api.v1.utilities.mirror_model.MirrorModelService/RegisterWebhookMirrorModel",
            request_serializer=v1_dot_utilities_dot_mirror__model__pb2.RegisterWebhookMirrorModelRequest.SerializeToString,
            response_deserializer=v1_dot_utilities_dot_mirror__model__pb2.RegisterWebhookMirrorModelResponse.FromString,
        )
        self.SynchronizeMirrorModel = channel.unary_unary(
            "/pro.omni.oms.api.v1.utilities.mirror_model.MirrorModelService/SynchronizeMirrorModel",
            request_serializer=v1_dot_utilities_dot_mirror__model__pb2.SynchronizeMirrorModelRequest.SerializeToString,
            response_deserializer=v1_dot_utilities_dot_mirror__model__pb2.SynchronizeMirrorModelResponse.FromString,
        )


class MirrorModelServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateMirrorModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ReadMirrorModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateMirrorModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteMirrorModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def MultiCreateMirrorModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def MultiUpdateMirrorModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def MultiDeleteMirrorModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def RegisterMethodGrpc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def RegisterWebhookMirrorModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SynchronizeMirrorModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_MirrorModelServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "CreateMirrorModel": grpc.unary_unary_rpc_method_handler(
            servicer.CreateMirrorModel,
            request_deserializer=v1_dot_utilities_dot_mirror__model__pb2.CreateOrUpdateMirrorModelRequest.FromString,
            response_serializer=v1_dot_utilities_dot_mirror__model__pb2.CreateOrUpdateCreateMirrorResponse.SerializeToString,
        ),
        "ReadMirrorModel": grpc.unary_unary_rpc_method_handler(
            servicer.ReadMirrorModel,
            request_deserializer=v1_dot_utilities_dot_mirror__model__pb2.ReadMirrorModelRequest.FromString,
            response_serializer=v1_dot_utilities_dot_mirror__model__pb2.ReadMirrorModelResponse.SerializeToString,
        ),
        "UpdateMirrorModel": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateMirrorModel,
            request_deserializer=v1_dot_utilities_dot_mirror__model__pb2.CreateOrUpdateMirrorModelRequest.FromString,
            response_serializer=v1_dot_utilities_dot_mirror__model__pb2.CreateOrUpdateCreateMirrorResponse.SerializeToString,
        ),
        "DeleteMirrorModel": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteMirrorModel,
            request_deserializer=v1_dot_utilities_dot_mirror__model__pb2.DeleteMirrorModelRequest.FromString,
            response_serializer=v1_dot_utilities_dot_mirror__model__pb2.DeleteMirrorModelResponse.SerializeToString,
        ),
        "MultiCreateMirrorModel": grpc.unary_unary_rpc_method_handler(
            servicer.MultiCreateMirrorModel,
            request_deserializer=v1_dot_utilities_dot_mirror__model__pb2.MultiCreateOrMultiUpdateMirrorModelRequest.FromString,
            response_serializer=v1_dot_utilities_dot_mirror__model__pb2.MultiCreateOrMultiUpdateMirrorModelResponse.SerializeToString,
        ),
        "MultiUpdateMirrorModel": grpc.unary_unary_rpc_method_handler(
            servicer.MultiUpdateMirrorModel,
            request_deserializer=v1_dot_utilities_dot_mirror__model__pb2.MultiCreateOrMultiUpdateMirrorModelRequest.FromString,
            response_serializer=v1_dot_utilities_dot_mirror__model__pb2.MultiCreateOrMultiUpdateMirrorModelResponse.SerializeToString,
        ),
        "MultiDeleteMirrorModel": grpc.unary_unary_rpc_method_handler(
            servicer.MultiDeleteMirrorModel,
            request_deserializer=v1_dot_utilities_dot_mirror__model__pb2.MultiDeleteMirrorModelRequest.FromString,
            response_serializer=v1_dot_utilities_dot_mirror__model__pb2.MultiDeleteMirrorModelResponse.SerializeToString,
        ),
        "RegisterMethodGrpc": grpc.unary_unary_rpc_method_handler(
            servicer.RegisterMethodGrpc,
            request_deserializer=v1_dot_utilities_dot_mirror__model__pb2.RegisterMethodGrpcRequest.FromString,
            response_serializer=v1_dot_utilities_dot_mirror__model__pb2.RegisterMethodGrpcResponse.SerializeToString,
        ),
        "RegisterWebhookMirrorModel": grpc.unary_unary_rpc_method_handler(
            servicer.RegisterWebhookMirrorModel,
            request_deserializer=v1_dot_utilities_dot_mirror__model__pb2.RegisterWebhookMirrorModelRequest.FromString,
            response_serializer=v1_dot_utilities_dot_mirror__model__pb2.RegisterWebhookMirrorModelResponse.SerializeToString,
        ),
        "SynchronizeMirrorModel": grpc.unary_unary_rpc_method_handler(
            servicer.SynchronizeMirrorModel,
            request_deserializer=v1_dot_utilities_dot_mirror__model__pb2.SynchronizeMirrorModelRequest.FromString,
            response_serializer=v1_dot_utilities_dot_mirror__model__pb2.SynchronizeMirrorModelResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "pro.omni.oms.api.v1.utilities.mirror_model.MirrorModelService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class MirrorModelService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateMirrorModel(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.utilities.mirror_model.MirrorModelService/CreateMirrorModel",
            v1_dot_utilities_dot_mirror__model__pb2.CreateOrUpdateMirrorModelRequest.SerializeToString,
            v1_dot_utilities_dot_mirror__model__pb2.CreateOrUpdateCreateMirrorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ReadMirrorModel(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.utilities.mirror_model.MirrorModelService/ReadMirrorModel",
            v1_dot_utilities_dot_mirror__model__pb2.ReadMirrorModelRequest.SerializeToString,
            v1_dot_utilities_dot_mirror__model__pb2.ReadMirrorModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UpdateMirrorModel(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.utilities.mirror_model.MirrorModelService/UpdateMirrorModel",
            v1_dot_utilities_dot_mirror__model__pb2.CreateOrUpdateMirrorModelRequest.SerializeToString,
            v1_dot_utilities_dot_mirror__model__pb2.CreateOrUpdateCreateMirrorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def DeleteMirrorModel(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.utilities.mirror_model.MirrorModelService/DeleteMirrorModel",
            v1_dot_utilities_dot_mirror__model__pb2.DeleteMirrorModelRequest.SerializeToString,
            v1_dot_utilities_dot_mirror__model__pb2.DeleteMirrorModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def MultiCreateMirrorModel(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.utilities.mirror_model.MirrorModelService/MultiCreateMirrorModel",
            v1_dot_utilities_dot_mirror__model__pb2.MultiCreateOrMultiUpdateMirrorModelRequest.SerializeToString,
            v1_dot_utilities_dot_mirror__model__pb2.MultiCreateOrMultiUpdateMirrorModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def MultiUpdateMirrorModel(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.utilities.mirror_model.MirrorModelService/MultiUpdateMirrorModel",
            v1_dot_utilities_dot_mirror__model__pb2.MultiCreateOrMultiUpdateMirrorModelRequest.SerializeToString,
            v1_dot_utilities_dot_mirror__model__pb2.MultiCreateOrMultiUpdateMirrorModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def MultiDeleteMirrorModel(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.utilities.mirror_model.MirrorModelService/MultiDeleteMirrorModel",
            v1_dot_utilities_dot_mirror__model__pb2.MultiDeleteMirrorModelRequest.SerializeToString,
            v1_dot_utilities_dot_mirror__model__pb2.MultiDeleteMirrorModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def RegisterMethodGrpc(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.utilities.mirror_model.MirrorModelService/RegisterMethodGrpc",
            v1_dot_utilities_dot_mirror__model__pb2.RegisterMethodGrpcRequest.SerializeToString,
            v1_dot_utilities_dot_mirror__model__pb2.RegisterMethodGrpcResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def RegisterWebhookMirrorModel(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.utilities.mirror_model.MirrorModelService/RegisterWebhookMirrorModel",
            v1_dot_utilities_dot_mirror__model__pb2.RegisterWebhookMirrorModelRequest.SerializeToString,
            v1_dot_utilities_dot_mirror__model__pb2.RegisterWebhookMirrorModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def SynchronizeMirrorModel(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.utilities.mirror_model.MirrorModelService/SynchronizeMirrorModel",
            v1_dot_utilities_dot_mirror__model__pb2.SynchronizeMirrorModelRequest.SerializeToString,
            v1_dot_utilities_dot_mirror__model__pb2.SynchronizeMirrorModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
