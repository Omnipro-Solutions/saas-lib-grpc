# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from omni_pro_grpc.v1.catalogs import special_condition_pb2 as v1_dot_catalogs_dot_special__condition__pb2


class SpecialConditionServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SpecialConditionCreate = channel.unary_unary(
            "/pro.omni.oms.api.v1.catalog.special_condition.SpecialConditionService/SpecialConditionCreate",
            request_serializer=v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionCreateRequest.SerializeToString,
            response_deserializer=v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionCreateResponse.FromString,
        )
        self.SpecialConditionRead = channel.unary_unary(
            "/pro.omni.oms.api.v1.catalog.special_condition.SpecialConditionService/SpecialConditionRead",
            request_serializer=v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionReadRequest.SerializeToString,
            response_deserializer=v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionReadResponse.FromString,
        )
        self.SpecialConditionUpdate = channel.unary_unary(
            "/pro.omni.oms.api.v1.catalog.special_condition.SpecialConditionService/SpecialConditionUpdate",
            request_serializer=v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionUpdateRequest.SerializeToString,
            response_deserializer=v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionUpdateResponse.FromString,
        )
        self.SpecialConditionDelete = channel.unary_unary(
            "/pro.omni.oms.api.v1.catalog.special_condition.SpecialConditionService/SpecialConditionDelete",
            request_serializer=v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionDeleteRequest.SerializeToString,
            response_deserializer=v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionDeleteResponse.FromString,
        )


class SpecialConditionServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SpecialConditionCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SpecialConditionRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SpecialConditionUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SpecialConditionDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_SpecialConditionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "SpecialConditionCreate": grpc.unary_unary_rpc_method_handler(
            servicer.SpecialConditionCreate,
            request_deserializer=v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionCreateRequest.FromString,
            response_serializer=v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionCreateResponse.SerializeToString,
        ),
        "SpecialConditionRead": grpc.unary_unary_rpc_method_handler(
            servicer.SpecialConditionRead,
            request_deserializer=v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionReadRequest.FromString,
            response_serializer=v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionReadResponse.SerializeToString,
        ),
        "SpecialConditionUpdate": grpc.unary_unary_rpc_method_handler(
            servicer.SpecialConditionUpdate,
            request_deserializer=v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionUpdateRequest.FromString,
            response_serializer=v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionUpdateResponse.SerializeToString,
        ),
        "SpecialConditionDelete": grpc.unary_unary_rpc_method_handler(
            servicer.SpecialConditionDelete,
            request_deserializer=v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionDeleteRequest.FromString,
            response_serializer=v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionDeleteResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "pro.omni.oms.api.v1.catalog.special_condition.SpecialConditionService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class SpecialConditionService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SpecialConditionCreate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.catalog.special_condition.SpecialConditionService/SpecialConditionCreate",
            v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionCreateRequest.SerializeToString,
            v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionCreateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def SpecialConditionRead(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.catalog.special_condition.SpecialConditionService/SpecialConditionRead",
            v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionReadRequest.SerializeToString,
            v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionReadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def SpecialConditionUpdate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.catalog.special_condition.SpecialConditionService/SpecialConditionUpdate",
            v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionUpdateRequest.SerializeToString,
            v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def SpecialConditionDelete(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.catalog.special_condition.SpecialConditionService/SpecialConditionDelete",
            v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionDeleteRequest.SerializeToString,
            v1_dot_catalogs_dot_special__condition__pb2.SpecialConditionDeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
