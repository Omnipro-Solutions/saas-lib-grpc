# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from omni_pro_grpc.v1.catalogs import attribute_pb2 as v1_dot_catalogs_dot_attribute__pb2


class AttributeServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AttributeCreate = channel.unary_unary(
            "/pro.omni.oms.api.v1.catalogs.attribute.AttributeService/AttributeCreate",
            request_serializer=v1_dot_catalogs_dot_attribute__pb2.AttributeCreateRequest.SerializeToString,
            response_deserializer=v1_dot_catalogs_dot_attribute__pb2.AttributeCreateResponse.FromString,
        )
        self.AttributeRead = channel.unary_unary(
            "/pro.omni.oms.api.v1.catalogs.attribute.AttributeService/AttributeRead",
            request_serializer=v1_dot_catalogs_dot_attribute__pb2.AttributeReadRequest.SerializeToString,
            response_deserializer=v1_dot_catalogs_dot_attribute__pb2.AttributeReadResponse.FromString,
        )
        self.AttributeUpdate = channel.unary_unary(
            "/pro.omni.oms.api.v1.catalogs.attribute.AttributeService/AttributeUpdate",
            request_serializer=v1_dot_catalogs_dot_attribute__pb2.AttributeUpdateRequest.SerializeToString,
            response_deserializer=v1_dot_catalogs_dot_attribute__pb2.AttributeUpdateResponse.FromString,
        )
        self.AttributeDelete = channel.unary_unary(
            "/pro.omni.oms.api.v1.catalogs.attribute.AttributeService/AttributeDelete",
            request_serializer=v1_dot_catalogs_dot_attribute__pb2.AttributeDeleteRequest.SerializeToString,
            response_deserializer=v1_dot_catalogs_dot_attribute__pb2.AttributeDeleteResponse.FromString,
        )


class AttributeServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AttributeCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def AttributeRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def AttributeUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def AttributeDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_AttributeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "AttributeCreate": grpc.unary_unary_rpc_method_handler(
            servicer.AttributeCreate,
            request_deserializer=v1_dot_catalogs_dot_attribute__pb2.AttributeCreateRequest.FromString,
            response_serializer=v1_dot_catalogs_dot_attribute__pb2.AttributeCreateResponse.SerializeToString,
        ),
        "AttributeRead": grpc.unary_unary_rpc_method_handler(
            servicer.AttributeRead,
            request_deserializer=v1_dot_catalogs_dot_attribute__pb2.AttributeReadRequest.FromString,
            response_serializer=v1_dot_catalogs_dot_attribute__pb2.AttributeReadResponse.SerializeToString,
        ),
        "AttributeUpdate": grpc.unary_unary_rpc_method_handler(
            servicer.AttributeUpdate,
            request_deserializer=v1_dot_catalogs_dot_attribute__pb2.AttributeUpdateRequest.FromString,
            response_serializer=v1_dot_catalogs_dot_attribute__pb2.AttributeUpdateResponse.SerializeToString,
        ),
        "AttributeDelete": grpc.unary_unary_rpc_method_handler(
            servicer.AttributeDelete,
            request_deserializer=v1_dot_catalogs_dot_attribute__pb2.AttributeDeleteRequest.FromString,
            response_serializer=v1_dot_catalogs_dot_attribute__pb2.AttributeDeleteResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "pro.omni.oms.api.v1.catalogs.attribute.AttributeService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class AttributeService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AttributeCreate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.catalogs.attribute.AttributeService/AttributeCreate",
            v1_dot_catalogs_dot_attribute__pb2.AttributeCreateRequest.SerializeToString,
            v1_dot_catalogs_dot_attribute__pb2.AttributeCreateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def AttributeRead(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.catalogs.attribute.AttributeService/AttributeRead",
            v1_dot_catalogs_dot_attribute__pb2.AttributeReadRequest.SerializeToString,
            v1_dot_catalogs_dot_attribute__pb2.AttributeReadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def AttributeUpdate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.catalogs.attribute.AttributeService/AttributeUpdate",
            v1_dot_catalogs_dot_attribute__pb2.AttributeUpdateRequest.SerializeToString,
            v1_dot_catalogs_dot_attribute__pb2.AttributeUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def AttributeDelete(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.v1.catalogs.attribute.AttributeService/AttributeDelete",
            v1_dot_catalogs_dot_attribute__pb2.AttributeDeleteRequest.SerializeToString,
            v1_dot_catalogs_dot_attribute__pb2.AttributeDeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
