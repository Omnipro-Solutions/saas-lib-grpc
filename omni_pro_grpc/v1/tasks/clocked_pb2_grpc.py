# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from omni_pro_grpc.v1.tasks import clocked_pb2 as v1_dot_tasks_dot_clocked__pb2


class ClockedServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ClockedCreate = channel.unary_unary(
            "/pro.omni.oms.api.tasks.clocked.ClockedService/ClockedCreate",
            request_serializer=v1_dot_tasks_dot_clocked__pb2.ClockedCreateRequest.SerializeToString,
            response_deserializer=v1_dot_tasks_dot_clocked__pb2.ClockedCreateResponse.FromString,
        )
        self.ClockedRead = channel.unary_unary(
            "/pro.omni.oms.api.tasks.clocked.ClockedService/ClockedRead",
            request_serializer=v1_dot_tasks_dot_clocked__pb2.ClockedReadRequest.SerializeToString,
            response_deserializer=v1_dot_tasks_dot_clocked__pb2.ClockedReadResponse.FromString,
        )
        self.ClockedUpdate = channel.unary_unary(
            "/pro.omni.oms.api.tasks.clocked.ClockedService/ClockedUpdate",
            request_serializer=v1_dot_tasks_dot_clocked__pb2.ClockedUpdateRequest.SerializeToString,
            response_deserializer=v1_dot_tasks_dot_clocked__pb2.ClockedUpdateResponse.FromString,
        )
        self.ClockedDelete = channel.unary_unary(
            "/pro.omni.oms.api.tasks.clocked.ClockedService/ClockedDelete",
            request_serializer=v1_dot_tasks_dot_clocked__pb2.ClockedDeleteRequest.SerializeToString,
            response_deserializer=v1_dot_tasks_dot_clocked__pb2.ClockedDeleteResponse.FromString,
        )


class ClockedServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ClockedCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ClockedRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ClockedUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ClockedDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ClockedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "ClockedCreate": grpc.unary_unary_rpc_method_handler(
            servicer.ClockedCreate,
            request_deserializer=v1_dot_tasks_dot_clocked__pb2.ClockedCreateRequest.FromString,
            response_serializer=v1_dot_tasks_dot_clocked__pb2.ClockedCreateResponse.SerializeToString,
        ),
        "ClockedRead": grpc.unary_unary_rpc_method_handler(
            servicer.ClockedRead,
            request_deserializer=v1_dot_tasks_dot_clocked__pb2.ClockedReadRequest.FromString,
            response_serializer=v1_dot_tasks_dot_clocked__pb2.ClockedReadResponse.SerializeToString,
        ),
        "ClockedUpdate": grpc.unary_unary_rpc_method_handler(
            servicer.ClockedUpdate,
            request_deserializer=v1_dot_tasks_dot_clocked__pb2.ClockedUpdateRequest.FromString,
            response_serializer=v1_dot_tasks_dot_clocked__pb2.ClockedUpdateResponse.SerializeToString,
        ),
        "ClockedDelete": grpc.unary_unary_rpc_method_handler(
            servicer.ClockedDelete,
            request_deserializer=v1_dot_tasks_dot_clocked__pb2.ClockedDeleteRequest.FromString,
            response_serializer=v1_dot_tasks_dot_clocked__pb2.ClockedDeleteResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "pro.omni.oms.api.tasks.clocked.ClockedService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class ClockedService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ClockedCreate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.tasks.clocked.ClockedService/ClockedCreate",
            v1_dot_tasks_dot_clocked__pb2.ClockedCreateRequest.SerializeToString,
            v1_dot_tasks_dot_clocked__pb2.ClockedCreateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ClockedRead(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.tasks.clocked.ClockedService/ClockedRead",
            v1_dot_tasks_dot_clocked__pb2.ClockedReadRequest.SerializeToString,
            v1_dot_tasks_dot_clocked__pb2.ClockedReadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ClockedUpdate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.tasks.clocked.ClockedService/ClockedUpdate",
            v1_dot_tasks_dot_clocked__pb2.ClockedUpdateRequest.SerializeToString,
            v1_dot_tasks_dot_clocked__pb2.ClockedUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ClockedDelete(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/pro.omni.oms.api.tasks.clocked.ClockedService/ClockedDelete",
            v1_dot_tasks_dot_clocked__pb2.ClockedDeleteRequest.SerializeToString,
            v1_dot_tasks_dot_clocked__pb2.ClockedDeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
